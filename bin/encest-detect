#!/usr/bin/env ruby

require 'json'
require 'slop'

# Get environment: development or production? -> Installed gem or current source dir
if ENV.key?( 'ENCEST_ENV' ) and ENV[ 'ENCEST_ENV' ] == 'development'
  require_relative '../lib/encoding_estimator'
else
  require 'encoding_estimator'
end

opts = Slop.parse do |o|
  o.array(
      '--encodings', 'Encodings to test', default: %w(utf-8 iso-8859-1 Windows-1251 Windows-1252)
  )
  o.array(
      '--operations', 'Operations (encode/decode) to test',
      default: [EncodingEstimator::Conversion::Operation::ENCODE, EncodingEstimator::Conversion::Operation::DECODE]
  )
  o.array(
      '--languages', 'Language profiles to apply (models to use)', default: ['de', 'en']
  )
  o.bool(
      '--help', '-h', 'Display help'
  )
end

if opts[:help]
  puts opts
  puts (' ' * 4) + 'other arguments: files to parse'
  exit! 0
end

opts.arguments.each do |file|
  unless File.file? file
    puts "No such file: #{file}"
    exit! 1
  end
end

# Internal vs. external profiles
opts[:languages] = opts[:languages].map { |l| l.size == 2 ? l.to_sym : l }

# Process every file
opts.arguments.each do |file|
  detection = EncodingEstimator.detect File.read(file ), {
                    languages:  opts[:languages],  encodings: opts[:encodings],
                    operations: opts[:operations], include_default: true
  }

  puts "#{file}: #{detection.result.key}"
  detection.results.each { |r| puts "    #{r[:conversion].key}: #{r[:score]}" }
end
